name: NPM Publish

on:
  release:
    # This specifies that the build will be triggered when we publish a release
    types: 
      - published

jobs:
  publish:
    name: Publish to NPM & Create Pull Request of Version Update
    # Run on latest version of ubuntu
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # "ref" specifies the branch to check out.
        # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
        ref: ${{ github.event.release.target_commitish }}
    # install Node.js
    - name: Use Node.js 16
      uses: actions/setup-node@v1
      with:
        node-version: 16
        # Specifies the registry, this field is required!
        registry-url: https://registry.npmjs.org/
    # clean install of your projects' deps. We use "npm ci" to avoid package lock changes
    - run: npm install
    # set up git since we will later push to the repo
    - run: git config --global user.name "Artus Version Bot"
    - run: git config --global user.email "artusjs-version-bot@example.org"
    # upgrade npm version in package.json to the tag used in the release.
    # upgrade npm version in package.json to the tag used in the release.
    - run: npm version ${{ github.event.release.tag_name }}
    # build the project
    - run: npm run build
    # run tests just in case
    - run: npm test
    # publish to NPM -> there is one caveat, continue reading for the fix
    - run: npm publish
      if: "!github.event.release.prerelease"
      env:
        # Use a token to publish to NPM. See below for how to set it up
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - run: npm publish --tag beta
      if: "github.event.release.prerelease"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        title: "[Version] ${{ github.event.release.tag_name }}"